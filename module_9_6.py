"""Задача:
Напишите функцию-генератор all_variants(text), которая принимает строку text и возвращает объект-генератор,
при каждой итерации которого будет возвращаться подпоследовательности переданной строки.

Пункты задачи:
1. Напишите функцию-генератор all_variants(text).
2. Опишите логику работы внутри функции all_variants.
3. Вызовите функцию all_variants и выполните итерации.
Пример результата выполнения программы:
Пример работы функции:
a = all_variants("abc")
for i in a:
print(i)
Вывод на консоль:
a
b
c
ab
bc
abc

Примечания:
Для функции генератора используйте оператор yield."""

def all_variants(text):
    length = len(text)
    for start in range(length):
        for end in range(start + 1, length + 1):
            yield text[start:end]


a = all_variants("abc")
for i in a:
    print(i)
"""В функции-генераторе all_variants используем два вложенных цикла. 
Внешний проходит по всем возможным начальным индексам строки, а внутренний — 
по конечным, которые начинаются с первого символа после начального. 
При каждой итерации генератор возвращает подстроку с помощью yield, что позволяет сохранить 
состояние функции между вызовами, генерируя подпоследовательности строки. 
В результате получаем все возможные подстроки исходного текста: 
"a", "b", "c", "ab", "bc", "abc"."""
